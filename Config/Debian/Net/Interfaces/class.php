<?
//SH management - API - Config - Debian - Net - Interfaces

//Get the configuration file /etc/network/interfaces for a host

class Config_Debian_Net_Interfaces {
  static public function getConfig($host_id) {
    //make sure that even when an error happens, at least a basic conffile can be written
    $buffer="";
    try {
      //No need to check validity - getById will do this for us :)
      $host=Host::getById($host_id);
      $interfaces=$host->interface_objs;
      foreach($interfaces as $idx=>$interface) {
        if(!$interface instanceof Host_Interface) {
          $buffer.=sprintf("# Interface index=%d is not valid\n",$idx);
          continue;
        }
        $buffer.=sprintf("# Interface ID=%d, MAC=%s\n",$interface->id,$interface->mac);
        $buffer.=sprintf("auto %s\n",$interface->name);
        if($interface->type==Host_Interface::IF_DHCP)
          $buffer.=sprintf("iface %s inet dhcp\n",$interface->name);
        else {
          $buffer.=sprintf("iface %s inet static\n",$interface->name);
          if(!isset($interface->addr_obj[0]) || !$interface->addr_obj[0] instanceof Net_Address) {
            $buffer.="# No address configuration found for this interface\n";
            continue;
          }
          $addr_obj=$interface->addr_obj[0];
          $buffer.=sprintf("#\tAddress id=%d\n",$addr_obj->id);
          $buffer.=sprintf("\taddress %s\n",$addr_obj->addr);
          if(!isset($addr_obj->network_obj[0]) || !$addr_obj->network_obj[0] instanceof Net_Network) {
            $buffer.=sprintf("# No network configuration found for addr_obj(id=%d)",$addr_obj->id);
            continue;
          }
          $network_obj=$addr_obj->network_obj[0];
          $buffer.=sprintf("#\tNetwork id=%d\n",$network_obj->id);
          $buffer.=sprintf("\tnetmask %s\n",$network_obj->netmask);
          $buffer.=sprintf("\tnetwork %s\n",$network_obj->network);
          $buffer.=sprintf("\tbroadcast %s\n",$network_obj->broadcast);
          $buffer.=sprintf("\tgateway %s\n",$network_obj->router);
          $dns_str="";
          if($network_obj->dns0!="") $dns_str.=$network_obj->dns0." ";
          if($network_obj->dns1!="") $dns_str.=$network_obj->dns1." ";
          $dns_str=trim($dns_str);
          if($dns_str!="")
            $buffer.=sprintf("\tdns-nameservers %s\n",$dns_str);
          if($network_obj->dns_dom!="")
          $buffer.=sprintf("\tdns-search %s\n",$network_obj->dns_dom);
        }
      }      
    } catch(Exception $e) {
      $buffer="# Error ".trim($e->getMessage())."\n";
    }
    //Always echo this, even in case of failure.
    //This way, the system can at least start
    $return="# Autogenerated config file for host $host_id on ".date("d.m.Y H:i:s")."\n\n";
    $return.="auto lo\n";
    $return.="iface lo inet loopback\n\n";
    $return.=$buffer;
    return $return;
  }
}