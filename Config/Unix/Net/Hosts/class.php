<?
//SH management - API - Config - Unix - Net - Hosts

//Get the configuration file /etc/hosts for a host

class Config_Unix_Net_Hosts {
  static public function getConfig($host_id) {
    //make sure that even when an error happens, at least a basic conffile can be written
    $buffer="";
    //use this to check if a primary interface was specified
    $foundPrimaryInterface=false;
    try {
      //No need to check validity - getById will do this for us :)
      $host=Host::getById($host_id);
      $interfaces=$host->interface_objs;
      foreach($interfaces as $idx=>$interface) {
        if(!$interface instanceof Host_Interface) {
          $buffer.=sprintf("# Interface index=%d is not valid\n",$idx);
          continue;
        }
        $buffer.=sprintf("# Interface ID=%d, MAC=%s\n",$interface->id,$interface->mac);
        if(!isset($interface->addr_obj[0]) || !$interface->addr_obj[0] instanceof Net_Address) {
          $buffer.="# No address configuration found for this interface\n";
          continue;
        }
        $addr_obj=$interface->addr_obj[0];
        $buffer.=sprintf("# Address id=%d\n",$addr_obj->id);

        if(!isset($addr_obj->network_obj[0]) || !$addr_obj->network_obj[0] instanceof Net_Network) {
          $buffer.=sprintf("\n# No network configuration found for addr_obj(id=%d)",$addr_obj->id);
          continue;
        }
        $network_obj=$addr_obj->network_obj[0];
        $buffer.=sprintf("# Network id=%d\n",$network_obj->id);

        $buffer.=sprintf("%s\t",$addr_obj->addr);
        if($network_obj->dns_dom!="")
          $buffer.=sprintf("%s.%s ",$host->name,$network_obj->dns_dom);
        //the IP of the primary interface is the IP to which "just" the hostname will resolve
        if($interface->isPrimary) {
          $buffer.=sprintf("%s",$host->name);
          $foundPrimaryInterface=true;
        }
        $buffer.="\n";

      }
    } catch(Exception $e) {
      $buffer="# Error ".trim($e->getMessage())."\n";
    }
    //Always echo this, even in case of failure.
    //This way, the system can at least start
    $return="# Autogenerated config file for host $host_id on ".date("d.m.Y H:i:s")."\n\n";
    $return.= "127.0.0.1\tlocalhost\n";
    $return.= "::1\t\tlocalhost ip6-localhost ip6-loopback\n";
    $return.= "ff02::1\t\tip6-allnodes\n";
    $return.= "ff02::2\t\tip6-allrouters\n";
    $return.= "\n";

    if(!$foundPrimaryInterface) {
      $return.="# WARNING - DID NOT FIND PRIMARY INTERFACE\n";
      logger::warn("Did not find primary interface for host %d",$host_id);
    }

    $return.=$buffer;
    return $return;
  }
}